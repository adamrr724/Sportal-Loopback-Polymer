module.exports=function(e){function r(r){var s=this.async();e.util.spawn({cmd:".nuget/nuget.exe",args:["pack",r,"-OutputDirectory","nuget","-Version",e.config.get("pkg").version]},function(r,c){r?e.log.error(r):e.log.write(c),s()})}e.initConfig({pkg:e.file.readJSON("package.json"),meta:{banner:'/*Copyright (c) Microsoft.  All rights reserved.\r\nMicrosoft Open Technologies. Licensed under the Apache License, Version 2.0 (the "License"); you.\r\nmay not use this file except in compliance with the License. You may.\r\nobtain a copy of the License at.\r\n\r\nhttp://www.apache.org/licenses/LICENSE-2.0.\r\n\r\nUnless required by applicable law or agreed to in writing, software.\r\ndistributed under the License is distributed on an "AS IS" BASIS,.\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or.\r\nimplied. See the License for the specific language governing permissions.\r\nand limitations under the License..\r\n*/'},concat:{core:{src:["src/core/headers/license.js","src/core/headers/intro.js","src/core/headers/coreheader.js","src/core/internal/trycatch.js","src/core/longstacktraces/longstackbegin.js","src/core/longstacktraces/longstacktraces.js","src/core/internal/util.js","src/core/disposables/compositedisposable.js","src/core/disposables/disposable.js","src/core/disposables/booleandisposable.js","src/core/disposables/binarydisposable.js","src/core/concurrency/scheduleditem.js","src/core/concurrency/scheduler.js","src/core/concurrency/scheduler.recursive.js","src/core/concurrency/scheduler.periodic.js","src/core/concurrency/scheduleperiodicrecursive.js","src/core/concurrency/immediatescheduler.js","src/core/concurrency/currentthreadscheduler.js","src/core/concurrency/defaultscheduler.js","src/core/internal/priorityqueue.js","src/core/observer-lite.js","src/core/abstractobserver.js","src/core/anonymousobserver.js","src/core/observable.js","src/core/anonymousobservable.js","src/core/perf/observablebase.js","src/core/autodetachobserver.js","src/core/linq/observable/create.js","src/core/headers/exports.js","src/core/longstacktraces/longstackend.js","src/core/headers/outro.js"],dest:"dist/rx.core.js"},"core-binding":{src:["src/core/headers/license.js","src/core/headers/core-intro.js","src/core/headers/core-bindingheader.js","src/core/internal/trycatch.js","src/core/linq/observable/multicast.js","src/core/linq/observable/publish.js","src/core/linq/observable/share.js","src/core/linq/observable/publishlast.js","src/core/linq/observable/publishvalue.js","src/core/linq/observable/sharevalue.js","src/core/linq/observable/replay.js","src/core/linq/observable/sharereplay.js","src/core/scheduledobserver.js","src/core/subjects/innersubscription.js","src/core/subjects/subject.js","src/core/subjects/anonymoussubject.js","src/core/subjects/asyncsubject.js","src/core/subjects/behaviorsubject.js","src/core/subjects/replaysubject.js","src/core/linq/connectableobservable.js","src/core/headers/suboutro.js"],dest:"dist/rx.core.binding.js"},"core-testing":{src:["src/core/headers/license.js","src/core/headers/core-intro.js","src/core/headers/core-testheader.js","src/core/notification.js","src/core/internal/dontenums.js","src/core/internal/isequal.js","src/core/concurrency/scheduleperiodicrecursive.js","src/core/concurrency/virtualtimescheduler.js","src/core/testing/reactivetest.js","src/core/testing/recorded.js","src/core/testing/subscription.js","src/core/testing/mockdisposable.js","src/core/testing/mockobserver.js","src/core/testing/mockpromise.js","src/core/testing/hotobservable.js","src/core/testing/coldobservable.js","src/core/testing/testscheduler.js","src/core/headers/suboutro.js"],dest:"dist/rx.core.testing.js"},all:{src:["src/core/headers/license.js","src/core/headers/intro.js","src/core/headers/basicheader.js","src/core/internal/trycatch.js","src/core/longstacktraces/longstackbegin.js","src/core/longstacktraces/longstacktraces.js","src/core/internal/errors.js","src/core/headers/enumeratorheader.js","src/core/internal/bindcallback.js","src/core/internal/dontenums.js","src/core/internal/isequal.js","src/core/internal/util.js","src/core/internal/priorityqueue.js","src/core/disposables/compositedisposable.js","src/core/disposables/disposable.js","src/core/disposables/booleandisposable.js","src/core/disposables/binarydisposable.js","src/core/disposables/refcountdisposable.js","src/core/disposables/scheduleddisposable.js","src/core/concurrency/scheduleditem.js","src/core/concurrency/scheduler.js","src/core/concurrency/scheduler.recursive.js","src/core/concurrency/scheduler.periodic.js","src/core/concurrency/scheduler.wrappers.js","src/core/concurrency/scheduleperiodicrecursive.js","src/core/concurrency/immediatescheduler.js","src/core/concurrency/currentthreadscheduler.js","src/core/concurrency/defaultscheduler.js","src/core/concurrency/catchscheduler.js","src/core/notification.js","src/core/observer.js","src/core/abstractobserver.js","src/core/anonymousobserver.js","src/core/checkedobserver.js","src/core/scheduledobserver.js","src/core/observeonobserver.js","src/core/observable.js","src/core/perf/observablebase.js","src/core/perf/operators/flatmapbase.js","src/core/enumerable.js","src/core/linq/observable/observeon.js","src/core/linq/observable/subscribeon.js","src/core/perf/operators/frompromise.js","src/core/linq/observable/topromise.js","src/core/perf/operators/toarray.js","src/core/linq/observable/create.js","src/core/linq/observable/defer.js","src/core/perf/operators/empty.js","src/core/perf/operators/from.js","src/core/perf/operators/fromarrayobservable.js","src/core/perf/operators/fromarray.js","src/core/linq/observable/generate.js","src/core/perf/operators/of.js","src/core/linq/observable/ofarraychanges.js","src/core/linq/observable/ofobjectchanges.js","src/core/perf/operators/never.js","src/core/perf/operators/pairs.js","src/core/perf/operators/range.js","src/core/perf/operators/repeat.js","src/core/perf/operators/just.js","src/core/perf/operators/throw.js","src/core/linq/observable/using.js","src/core/linq/observable/ambproto.js","src/core/linq/observable/amb.js","src/core/linq/observable/catchproto.js","src/core/linq/observable/catch.js","src/core/linq/observable/combinelatestproto.js","src/core/perf/operators/combinelatest.js","src/core/linq/observable/concatproto.js","src/core/perf/operators/concat.js","src/core/linq/observable/concatall.js","src/core/perf/operators/mergeconcat.js","src/core/linq/observable/merge.js","src/core/perf/operators/mergeall.js","src/core/linq/observable/mergedelayerror.js","src/core/linq/observable/onerrorresumenextproto.js","src/core/linq/observable/onerrorresumenext.js","src/core/perf/operators/skipuntil.js","src/core/perf/operators/switch.js","src/core/perf/operators/takeuntil.js","src/core/perf/operators/withlatestfrom.js","src/core/perf/operators/zip.js","src/core/linq/observable/zip.js","src/core/linq/observable/zipiterable.js","src/core/linq/observable/asobservable.js","src/core/linq/observable/bufferwithcount.js","src/core/linq/observable/dematerialize.js","src/core/perf/operators/distinctuntilchanged.js","src/core/perf/operators/tap.js","src/core/perf/operators/finally.js","src/core/perf/operators/ignoreelements.js","src/core/linq/observable/materialize.js","src/core/linq/observable/repeatproto.js","src/core/linq/observable/retry.js","src/core/linq/observable/retrywhen.js","src/core/linq/observable/repeatwhen.js","src/core/perf/operators/scan.js","src/core/linq/observable/skiplast.js","src/core/linq/observable/startwith.js","src/core/linq/observable/takelast.js","src/core/linq/observable/takelastbuffer.js","src/core/linq/observable/windowwithcount.js","src/core/linq/observable/concatmap.js","src/core/linq/observable/concatmapobserver.js","src/core/linq/observable/defaultifempty.js","src/core/linq/observable/distinct.js","src/core/linq/observable/groupby.js","src/core/linq/observable/groupbyuntil.js","src/core/perf/operators/map.js","src/core/linq/observable/pluck.js","src/core/perf/operators/flatmap.js","src/core/linq/observable/selectmanyobserver.js","src/core/perf/operators/flatmaplatest.js","src/core/perf/operators/skip.js","src/core/linq/observable/skipwhile.js","src/core/perf/operators/take.js","src/core/linq/observable/takewhile.js","src/core/perf/operators/filter.js","src/core/linq/observable/_extremaby.js","src/core/linq/observable/_firstonly.js","src/core/perf/operators/reduce.js","src/core/linq/observable/some.js","src/core/linq/observable/isempty.js","src/core/linq/observable/every.js","src/core/linq/observable/includes.js","src/core/linq/observable/count.js","src/core/linq/observable/indexof.js","src/core/linq/observable/sum.js","src/core/linq/observable/minby.js","src/core/linq/observable/min.js","src/core/linq/observable/maxby.js","src/core/linq/observable/max.js","src/core/linq/observable/average.js","src/core/linq/observable/sequenceequal.js","src/core/linq/observable/elementat.js","src/core/linq/observable/single.js","src/core/linq/observable/first.js","src/core/linq/observable/last.js","src/core/linq/observable/_findvalue.js","src/core/linq/observable/find.js","src/core/linq/observable/findindex.js","src/core/linq/observable/toset.js","src/core/linq/observable/tomap.js","src/core/linq/observable/slice.js","src/core/linq/observable/lastindexof.js","src/core/linq/observable/spawn.js","src/core/linq/observable/start.js","src/core/linq/observable/toasync.js","src/core/perf/operators/fromcallback.js","src/core/perf/operators/fromnodecallback.js","src/core/linq/observable/fromevent.js","src/core/linq/observable/fromeventpattern.js","src/core/linq/observable/startasync.js","src/core/backpressure/pausable.js","src/core/backpressure/pausablebuffered.js","src/core/backpressure/controlled.js","src/core/backpressure/stopandwait.js","src/core/backpressure/windowed.js","src/core/linq/observable/pipe.js","src/core/linq/observable/multicast.js","src/core/linq/observable/publish.js","src/core/linq/observable/share.js","src/core/linq/observable/publishlast.js","src/core/linq/observable/publishvalue.js","src/core/linq/observable/sharevalue.js","src/core/linq/observable/replay.js","src/core/linq/observable/sharereplay.js","src/core/subjects/innersubscription.js","src/core/linq/connectableobservable.js","src/core/linq/observable/singleinstance.js","src/core/linq/observable/join.js","src/core/linq/observable/groupjoin.js","src/core/linq/observable/buffer.js","src/core/linq/observable/window.js","src/core/linq/observable/pairwise.js","src/core/linq/observable/partition.js","src/core/linq/enumerable/while.js","src/core/linq/observable/let.js","src/core/linq/observable/if.js","src/core/linq/observable/for.js","src/core/linq/observable/while.js","src/core/linq/observable/dowhile.js","src/core/linq/observable/case.js","src/core/linq/observable/expand.js","src/core/linq/observable/forkjoin.js","src/core/linq/observable/forkjoinproto.js","src/core/linq/observable/manyselect.js","src/core/internal/map.js","src/core/joins/pattern.js","src/core/joins/plan.js","src/core/joins/activeplan.js","src/core/joins/joinobserver.js","src/core/linq/observable/and.js","src/core/linq/observable/thendo.js","src/core/linq/observable/when.js","src/core/linq/observable/_observabletimer.js","src/core/linq/observable/_observabletimerdateandperiod.js","src/core/linq/observable/_observabletimertimespanandperiod.js","src/core/linq/observable/interval.js","src/core/linq/observable/timer.js","src/core/linq/observable/delay.js","src/core/linq/observable/debounce.js","src/core/linq/observable/windowwithtime.js","src/core/linq/observable/windowwithtimeorcount.js","src/core/linq/observable/bufferwithtime.js","src/core/linq/observable/bufferwithtimeorcount.js","src/core/linq/observable/timeinterval.js","src/core/linq/observable/timestamp.js","src/core/linq/observable/sample.js","src/core/linq/observable/timeout.js","src/core/linq/observable/generatewithabsolutetime.js","src/core/linq/observable/generatewithrelativetime.js","src/core/linq/observable/delaysubscription.js","src/core/linq/observable/skiplastwithtime.js","src/core/linq/observable/takelastwithtime.js","src/core/linq/observable/takelastbufferwithtime.js","src/core/linq/observable/takewithtime.js","src/core/linq/observable/skipwithtime.js","src/core/linq/observable/skipuntilwithtime.js","src/core/linq/observable/takeuntilwithtime.js","src/core/linq/observable/throttle.js","src/core/linq/observable/transduce.js","src/core/linq/observable/switchfirst.js","src/core/perf/operators/flatmapfirst.js","src/core/perf/operators/flatmapwithmaxconcurrent.js","src/core/concurrency/virtualtimescheduler.js","src/core/concurrency/historicalscheduler.js","src/core/testing/reactivetest.js","src/core/testing/recorded.js","src/core/testing/subscription.js","src/core/testing/mockdisposable.js","src/core/testing/mockobserver.js","src/core/testing/mockpromise.js","src/core/testing/hotobservable.js","src/core/testing/coldobservable.js","src/core/testing/testscheduler.js","src/core/anonymousobservable.js","src/core/autodetachobserver.js","src/core/linq/groupedobservable.js","src/core/subjects/innersubscription.js","src/core/subjects/subject.js","src/core/subjects/asyncsubject.js","src/core/subjects/behaviorsubject.js","src/core/subjects/replaysubject.js","src/core/subjects/anonymoussubject.js","src/core/backpressure/pauser.js","src/core/headers/exports.js","src/core/longstacktraces/longstackend.js","src/core/headers/outro.js"],dest:"dist/rx.all.js"},"all-compat":{src:["src/core/headers/license.js","src/core/headers/intro.js","src/core/headers/basicheader-compat.js","src/core/internal/trycatch.js","src/core/longstacktraces/longstackbegin.js","src/core/longstacktraces/longstacktraces.js","src/core/internal/polyfills.js","src/core/internal/errors.js","src/core/headers/enumeratorheader.js","src/core/internal/bindcallback.js","src/core/internal/dontenums.js","src/core/internal/isequal.js","src/core/internal/util.js","src/core/internal/priorityqueue.js","src/core/disposables/compositedisposable.js","src/core/disposables/disposable.js","src/core/disposables/booleandisposable.js","src/core/disposables/binarydisposable.js","src/core/disposables/refcountdisposable.js","src/core/disposables/scheduleddisposable.js","src/core/concurrency/scheduleditem.js","src/core/concurrency/scheduler.js","src/core/concurrency/scheduler.recursive.js","src/core/concurrency/scheduler.periodic.js","src/core/concurrency/scheduler.wrappers.js","src/core/concurrency/scheduleperiodicrecursive.js","src/core/concurrency/immediatescheduler.js","src/core/concurrency/currentthreadscheduler.js","src/core/concurrency/defaultscheduler.js","src/core/concurrency/catchscheduler.js","src/core/notification.js","src/core/observer.js","src/core/abstractobserver.js","src/core/anonymousobserver.js","src/core/checkedobserver.js","src/core/scheduledobserver.js","src/core/observeonobserver.js","src/core/observable.js","src/core/perf/observablebase.js","src/core/perf/operators/flatmapbase.js","src/core/enumerable.js","src/core/linq/observable/observeon.js","src/core/linq/observable/subscribeon.js","src/core/perf/operators/frompromise.js","src/core/linq/observable/topromise.js","src/core/perf/operators/toarray.js","src/core/linq/observable/create.js","src/core/linq/observable/defer.js","src/core/perf/operators/empty.js","src/core/perf/operators/from.js","src/core/perf/operators/fromarrayobservable.js","src/core/perf/operators/fromarray.js","src/core/linq/observable/generate.js","src/core/perf/operators/of.js","src/core/perf/operators/never.js","src/core/perf/operators/pairs.js","src/core/perf/operators/range.js","src/core/perf/operators/repeat.js","src/core/perf/operators/just.js","src/core/perf/operators/throw.js","src/core/linq/observable/using.js","src/core/linq/observable/ambproto.js","src/core/linq/observable/amb.js","src/core/linq/observable/catchproto.js","src/core/linq/observable/catch.js","src/core/linq/observable/combinelatestproto.js","src/core/perf/operators/combinelatest.js","src/core/linq/observable/concatproto.js","src/core/perf/operators/concat.js","src/core/linq/observable/concatall.js","src/core/perf/operators/mergeconcat.js","src/core/linq/observable/merge.js","src/core/perf/operators/mergeall.js","src/core/linq/observable/mergedelayerror.js","src/core/linq/observable/onerrorresumenextproto.js","src/core/linq/observable/onerrorresumenext.js","src/core/perf/operators/skipuntil.js","src/core/perf/operators/switch.js","src/core/perf/operators/takeuntil.js","src/core/perf/operators/withlatestfrom.js","src/core/perf/operators/zip.js","src/core/linq/observable/zip.js","src/core/linq/observable/zipiterable.js","src/core/linq/observable/asobservable.js","src/core/linq/observable/bufferwithcount.js","src/core/linq/observable/dematerialize.js","src/core/perf/operators/distinctuntilchanged.js","src/core/perf/operators/tap.js","src/core/perf/operators/finally.js","src/core/perf/operators/ignoreelements.js","src/core/linq/observable/materialize.js","src/core/linq/observable/repeatproto.js","src/core/linq/observable/retry.js","src/core/linq/observable/retrywhen.js","src/core/linq/observable/repeatwhen.js","src/core/perf/operators/scan.js","src/core/linq/observable/skiplast.js","src/core/linq/observable/startwith.js","src/core/linq/observable/takelast.js","src/core/linq/observable/takelastbuffer.js","src/core/linq/observable/windowwithcount.js","src/core/perf/operators/concatmap.js","src/core/linq/observable/concatmapobserver.js","src/core/linq/observable/defaultifempty.js","src/core/linq/observable/distinct.js","src/core/linq/observable/groupby.js","src/core/linq/observable/groupbyuntil.js","src/core/perf/operators/map.js","src/core/linq/observable/pluck.js","src/core/perf/operators/flatmap.js","src/core/linq/observable/selectmanyobserver.js","src/core/perf/operators/flatmaplatest.js","src/core/perf/operators/skip.js","src/core/linq/observable/skipwhile.js","src/core/perf/operators/take.js","src/core/linq/observable/takewhile.js","src/core/perf/operators/filter.js","src/core/linq/observable/_extremaby.js","src/core/linq/observable/_firstonly.js","src/core/perf/operators/reduce.js","src/core/linq/observable/some.js","src/core/linq/observable/isempty.js","src/core/linq/observable/every.js","src/core/linq/observable/includes.js","src/core/linq/observable/count.js","src/core/linq/observable/indexof.js","src/core/linq/observable/sum.js","src/core/linq/observable/minby.js","src/core/linq/observable/min.js","src/core/linq/observable/maxby.js","src/core/linq/observable/max.js","src/core/linq/observable/average.js","src/core/linq/observable/sequenceequal.js","src/core/linq/observable/elementat.js","src/core/linq/observable/single.js","src/core/linq/observable/first.js","src/core/linq/observable/last.js","src/core/linq/observable/_findvalue.js","src/core/linq/observable/find.js","src/core/linq/observable/findindex.js","src/core/linq/observable/toset.js","src/core/linq/observable/tomap.js","src/core/linq/observable/slice.js","src/core/linq/observable/lastindexof.js","src/core/linq/observable/spawn.js","src/core/linq/observable/start.js","src/core/linq/observable/toasync.js","src/core/perf/operators/fromcallback.js","src/core/perf/operators/fromnodecallback.js","src/core/linq/observable/fromevent.js","src/core/linq/observable/fromeventpattern.js","src/core/linq/observable/startasync.js","src/core/backpressure/pausable.js","src/core/backpressure/pausablebuffered.js","src/core/backpressure/controlled.js","src/core/backpressure/stopandwait.js","src/core/backpressure/windowed.js","src/core/linq/observable/pipe.js","src/core/linq/observable/multicast.js","src/core/linq/observable/publish.js","src/core/linq/observable/share.js","src/core/linq/observable/publishlast.js","src/core/linq/observable/publishvalue.js","src/core/linq/observable/sharevalue.js","src/core/linq/observable/replay.js","src/core/linq/observable/sharereplay.js","src/core/subjects/innersubscription.js","src/core/linq/connectableobservable.js","src/core/linq/observable/singleinstance.js","src/core/linq/observable/join.js","src/core/linq/observable/groupjoin.js","src/core/linq/observable/buffer.js","src/core/linq/observable/window.js","src/core/linq/observable/pairwise.js","src/core/linq/observable/partition.js","src/core/linq/enumerable/while.js","src/core/linq/observable/let.js","src/core/linq/observable/if.js","src/core/linq/observable/for.js","src/core/linq/observable/while.js","src/core/linq/observable/dowhile.js","src/core/linq/observable/case.js","src/core/linq/observable/expand.js","src/core/linq/observable/forkjoin.js","src/core/linq/observable/forkjoinproto.js","src/core/linq/observable/manyselect.js","src/core/internal/map.js","src/core/joins/pattern.js","src/core/joins/plan.js","src/core/joins/activeplan.js","src/core/joins/joinobserver.js","src/core/linq/observable/and.js","src/core/linq/observable/thendo.js","src/core/linq/observable/when.js","src/core/linq/observable/_observabletimer.js","src/core/linq/observable/_observabletimerdateandperiod.js","src/core/linq/observable/_observabletimertimespanandperiod.js","src/core/linq/observable/interval.js","src/core/linq/observable/timer.js","src/core/linq/observable/delay.js","src/core/linq/observable/debounce.js","src/core/linq/observable/windowwithtime.js","src/core/linq/observable/windowwithtimeorcount.js","src/core/linq/observable/bufferwithtime.js","src/core/linq/observable/bufferwithtimeorcount.js","src/core/linq/observable/timeinterval.js","src/core/linq/observable/timestamp.js","src/core/linq/observable/sample.js","src/core/linq/observable/timeout.js","src/core/linq/observable/generatewithabsolutetime.js","src/core/linq/observable/generatewithrelativetime.js","src/core/linq/observable/delaysubscription.js","src/core/linq/observable/skiplastwithtime.js","src/core/linq/observable/takelastwithtime.js","src/core/linq/observable/takelastbufferwithtime.js","src/core/linq/observable/takewithtime.js","src/core/linq/observable/skipwithtime.js","src/core/linq/observable/skipuntilwithtime.js","src/core/linq/observable/takeuntilwithtime.js","src/core/linq/observable/throttle.js","src/core/linq/observable/switchfirst.js","src/core/perf/operators/flatmapfirst.js","src/core/perf/operators/flatmapwithmaxconcurrent.js","src/core/linq/observable/transduce.js","src/core/concurrency/virtualtimescheduler.js","src/core/concurrency/historicalscheduler.js","src/core/testing/reactivetest.js","src/core/testing/recorded.js","src/core/testing/subscription.js","src/core/testing/mockdisposable.js","src/core/testing/mockobserver.js","src/core/testing/mockpromise.js","src/core/testing/hotobservable.js","src/core/testing/coldobservable.js","src/core/testing/testscheduler.js","src/core/anonymousobservable.js","src/core/autodetachobserver.js","src/core/linq/groupedobservable.js","src/core/subjects/innersubscription.js","src/core/subjects/subject.js","src/core/subjects/asyncsubject.js","src/core/subjects/anonymoussubject.js","src/core/subjects/behaviorsubject.js","src/core/subjects/replaysubject.js","src/core/backpressure/pauser.js","src/core/headers/exports.js","src/core/longstacktraces/longstackend.js","src/core/headers/outro.js"],dest:"dist/rx.all.compat.js"},main:{src:["src/core/headers/license.js","src/core/headers/intro.js","src/core/headers/basicheader.js","src/core/internal/trycatch.js","src/core/longstacktraces/longstackbegin.js","src/core/longstacktraces/longstacktraces.js","src/core/internal/errors.js","src/core/headers/enumeratorheader.js","src/core/internal/bindcallback.js","src/core/internal/dontenums.js","src/core/internal/isequal.js","src/core/internal/util.js","src/core/disposables/compositedisposable.js","src/core/disposables/disposable.js","src/core/disposables/booleandisposable.js","src/core/disposables/binarydisposable.js","src/core/disposables/refcountdisposable.js","src/core/disposables/scheduleddisposable.js","src/core/concurrency/scheduleditem.js","src/core/concurrency/scheduler.js","src/core/concurrency/scheduler.recursive.js","src/core/concurrency/scheduler.periodic.js","src/core/concurrency/scheduler.wrappers.js","src/core/concurrency/scheduleperiodicrecursive.js","src/core/concurrency/immediatescheduler.js","src/core/concurrency/currentthreadscheduler.js","src/core/concurrency/defaultscheduler.js","src/core/concurrency/catchscheduler.js","src/core/internal/priorityqueue.js","src/core/notification.js","src/core/observer.js","src/core/abstractobserver.js","src/core/anonymousobserver.js","src/core/checkedobserver.js","src/core/scheduledobserver.js","src/core/observeonobserver.js","src/core/observable.js","src/core/perf/observablebase.js","src/core/perf/operators/flatmapbase.js","src/core/enumerable.js","src/core/linq/observable/observeon.js","src/core/linq/observable/subscribeon.js","src/core/perf/operators/frompromise.js","src/core/linq/observable/topromise.js","src/core/perf/operators/toarray.js","src/core/linq/observable/create.js","src/core/linq/observable/defer.js","src/core/perf/operators/empty.js","src/core/perf/operators/from.js","src/core/perf/operators/fromarrayobservable.js","src/core/perf/operators/fromarray.js","src/core/linq/observable/generate.js","src/core/perf/operators/never.js","src/core/perf/operators/of.js","src/core/perf/operators/pairs.js","src/core/perf/operators/range.js","src/core/perf/operators/repeat.js","src/core/perf/operators/just.js","src/core/perf/operators/throw.js","src/core/linq/observable/using.js","src/core/linq/observable/ambproto.js","src/core/linq/observable/amb.js","src/core/linq/observable/catchproto.js","src/core/linq/observable/catch.js","src/core/linq/observable/combinelatestproto.js","src/core/perf/operators/combinelatest.js","src/core/linq/observable/concatproto.js","src/core/perf/operators/concat.js","src/core/linq/observable/concatall.js","src/core/perf/operators/mergeconcat.js","src/core/linq/observable/merge.js","src/core/linq/observable/mergedelayerror.js","src/core/perf/operators/mergeall.js","src/core/linq/observable/onerrorresumenextproto.js","src/core/linq/observable/onerrorresumenext.js","src/core/perf/operators/skipuntil.js","src/core/perf/operators/switch.js","src/core/perf/operators/takeuntil.js","src/core/perf/operators/withlatestfrom.js","src/core/perf/operators/zip.js","src/core/linq/observable/zip.js","src/core/linq/observable/zipiterable.js","src/core/linq/observable/asobservable.js","src/core/linq/observable/bufferwithcount.js","src/core/linq/observable/dematerialize.js","src/core/perf/operators/distinctuntilchanged.js","src/core/perf/operators/tap.js","src/core/perf/operators/finally.js","src/core/perf/operators/ignoreelements.js","src/core/linq/observable/materialize.js","src/core/linq/observable/repeatproto.js","src/core/linq/observable/retry.js","src/core/linq/observable/retrywhen.js","src/core/linq/observable/repeatwhen.js","src/core/perf/operators/scan.js","src/core/linq/observable/skiplast.js","src/core/linq/observable/startwith.js","src/core/linq/observable/takelast.js","src/core/linq/observable/takelastbuffer.js","src/core/linq/observable/windowwithcount.js","src/core/perf/operators/concatmap.js","src/core/linq/observable/concatmapobserver.js","src/core/linq/observable/defaultifempty.js","src/core/linq/observable/distinct.js","src/core/perf/operators/map.js","src/core/linq/observable/pluck.js","src/core/linq/observable/selectmanyobserver.js","src/core/perf/operators/flatmap.js","src/core/perf/operators/flatmaplatest.js","src/core/perf/operators/skip.js","src/core/linq/observable/skipwhile.js","src/core/perf/operators/take.js","src/core/linq/observable/takewhile.js","src/core/perf/operators/filter.js","src/core/linq/observable/transduce.js","src/core/anonymousobservable.js","src/core/autodetachobserver.js","src/core/subjects/innersubscription.js","src/core/subjects/subject.js","src/core/subjects/asyncsubject.js","src/core/subjects/anonymoussubject.js","src/core/headers/exports.js","src/core/longstacktraces/longstackend.js","src/core/headers/outro.js"],dest:"dist/rx.js"},"main-compat":{src:["src/core/headers/license.js","src/core/headers/intro.js","src/core/headers/basicheader-compat.js","src/core/internal/trycatch.js","src/core/longstacktraces/longstackbegin.js","src/core/longstacktraces/longstacktraces.js","src/core/internal/polyfills.js","src/core/internal/errors.js","src/core/headers/enumeratorheader.js","src/core/internal/bindcallback.js","src/core/internal/dontenums.js","src/core/internal/isequal.js","src/core/internal/util.js","src/core/disposables/compositedisposable.js","src/core/disposables/disposable.js","src/core/disposables/booleandisposable.js","src/core/disposables/binarydisposable.js","src/core/disposables/refcountdisposable.js","src/core/disposables/scheduleddisposable.js","src/core/concurrency/scheduleditem.js","src/core/concurrency/scheduler.js","src/core/concurrency/scheduler.recursive.js","src/core/concurrency/scheduler.periodic.js","src/core/concurrency/scheduler.wrappers.js","src/core/concurrency/scheduleperiodicrecursive.js","src/core/concurrency/immediatescheduler.js","src/core/concurrency/currentthreadscheduler.js","src/core/concurrency/defaultscheduler.js","src/core/concurrency/catchscheduler.js","src/core/internal/priorityqueue.js","src/core/notification.js","src/core/observer.js","src/core/abstractobserver.js","src/core/anonymousobserver.js","src/core/checkedobserver.js","src/core/scheduledobserver.js","src/core/observeonobserver.js","src/core/observable.js","src/core/perf/observablebase.js","src/core/perf/operators/flatmapbase.js","src/core/enumerable.js","src/core/linq/observable/observeon.js","src/core/linq/observable/subscribeon.js","src/core/perf/operators/frompromise.js","src/core/linq/observable/topromise.js","src/core/perf/operators/toarray.js","src/core/linq/observable/create.js","src/core/linq/observable/defer.js","src/core/perf/operators/empty.js","src/core/perf/operators/from.js","src/core/perf/operators/fromarrayobservable.js","src/core/perf/operators/fromarray.js","src/core/linq/observable/generate.js","src/core/perf/operators/never.js","src/core/perf/operators/of.js","src/core/perf/operators/pairs.js","src/core/perf/operators/range.js","src/core/perf/operators/repeat.js","src/core/perf/operators/just.js","src/core/perf/operators/throw.js","src/core/linq/observable/using.js","src/core/linq/observable/ambproto.js","src/core/linq/observable/amb.js","src/core/linq/observable/catchproto.js","src/core/linq/observable/catch.js","src/core/linq/observable/combinelatestproto.js","src/core/perf/operators/combinelatest.js","src/core/linq/observable/concatproto.js","src/core/perf/operators/concat.js","src/core/linq/observable/concatall.js","src/core/perf/operators/mergeconcat.js","src/core/linq/observable/merge.js","src/core/perf/operators/mergeall.js","src/core/linq/observable/mergedelayerror.js","src/core/linq/observable/onerrorresumenextproto.js","src/core/linq/observable/onerrorresumenext.js","src/core/perf/operators/skipuntil.js","src/core/perf/operators/switch.js","src/core/perf/operators/takeuntil.js","src/core/perf/operators/withlatestfrom.js","src/core/perf/operators/zip.js","src/core/linq/observable/zip.js","src/core/linq/observable/zipiterable.js","src/core/linq/observable/asobservable.js","src/core/linq/observable/bufferwithcount.js","src/core/linq/observable/dematerialize.js","src/core/perf/operators/distinctuntilchanged.js","src/core/perf/operators/tap.js","src/core/perf/operators/finally.js","src/core/perf/operators/ignoreelements.js","src/core/linq/observable/materialize.js","src/core/linq/observable/repeatproto.js","src/core/linq/observable/retry.js","src/core/linq/observable/retrywhen.js","src/core/linq/observable/repeatwhen.js","src/core/perf/operators/scan.js","src/core/linq/observable/skiplast.js","src/core/linq/observable/startwith.js","src/core/linq/observable/takelast.js","src/core/linq/observable/takelastbuffer.js","src/core/linq/observable/windowwithcount.js","src/core/perf/operators/concatmap.js","src/core/linq/observable/concatmapobserver.js","src/core/linq/observable/defaultifempty.js","src/core/linq/observable/distinct.js","src/core/perf/operators/map.js","src/core/linq/observable/pluck.js","src/core/perf/operators/flatmap.js","src/core/linq/observable/selectmanyobserver.js","src/core/perf/operators/flatmaplatest.js","src/core/perf/operators/skip.js","src/core/linq/observable/skipwhile.js","src/core/perf/operators/take.js","src/core/linq/observable/takewhile.js","src/core/perf/operators/filter.js","src/core/linq/observable/transduce.js","src/core/anonymousobservable.js","src/core/autodetachobserver.js","src/core/subjects/innersubscription.js","src/core/subjects/subject.js","src/core/subjects/asyncsubject.js","src/core/subjects/anonymoussubject.js","src/core/headers/exports.js","src/core/longstacktraces/longstackend.js","src/core/headers/outro.js"],
dest:"dist/rx.compat.js"},lite:{src:["src/core/headers/license.js","src/core/headers/intro.js","src/core/headers/liteheader.js","src/core/internal/trycatch.js","src/core/longstacktraces/longstackbegin.js","src/core/longstacktraces/longstacktraces.js","src/core/internal/errors.js","src/core/headers/enumeratorheader.js","src/core/internal/bindcallback.js","src/core/internal/dontenums.js","src/core/internal/isequal.js","src/core/internal/util.js","src/core/disposables/compositedisposable.js","src/core/disposables/disposable.js","src/core/disposables/booleandisposable.js","src/core/disposables/binarydisposable.js","src/core/disposables/refcountdisposable.js","src/core/concurrency/scheduleditem.js","src/core/concurrency/scheduler.js","src/core/concurrency/scheduler.recursive.js","src/core/concurrency/scheduler.periodic.js","src/core/concurrency/immediatescheduler.js","src/core/concurrency/currentthreadscheduler.js","src/core/concurrency/scheduleperiodicrecursive.js","src/core/concurrency/defaultscheduler.js","src/core/internal/priorityqueue.js","src/core/notification.js","src/core/observer-lite.js","src/core/abstractobserver.js","src/core/anonymousobserver.js","src/core/observable.js","src/core/scheduledobserver.js","src/core/perf/observablebase.js","src/core/perf/operators/flatmapbase.js","src/core/enumerable.js","src/core/perf/operators/toarray.js","src/core/linq/observable/create.js","src/core/linq/observable/defer.js","src/core/perf/operators/empty.js","src/core/perf/operators/from.js","src/core/perf/operators/fromarrayobservable.js","src/core/perf/operators/fromarray.js","src/core/perf/operators/never.js","src/core/perf/operators/of.js","src/core/perf/operators/pairs.js","src/core/perf/operators/range.js","src/core/perf/operators/repeat.js","src/core/perf/operators/just.js","src/core/perf/operators/throw.js","src/core/linq/observable/catchproto.js","src/core/linq/observable/catch.js","src/core/linq/observable/combinelatestproto.js","src/core/perf/operators/combinelatest.js","src/core/linq/observable/concatproto.js","src/core/perf/operators/concat.js","src/core/linq/observable/concatall.js","src/core/perf/operators/mergeconcat.js","src/core/linq/observable/merge.js","src/core/linq/observable/mergedelayerror.js","src/core/perf/operators/mergeall.js","src/core/perf/operators/skipuntil.js","src/core/perf/operators/switch.js","src/core/perf/operators/takeuntil.js","src/core/perf/operators/withlatestfrom.js","src/core/perf/operators/zip.js","src/core/linq/observable/zip.js","src/core/linq/observable/zipiterable.js","src/core/linq/observable/asobservable.js","src/core/linq/observable/dematerialize.js","src/core/perf/operators/distinctuntilchanged.js","src/core/perf/operators/tap.js","src/core/perf/operators/finally.js","src/core/perf/operators/ignoreelements.js","src/core/linq/observable/materialize.js","src/core/linq/observable/repeatproto.js","src/core/linq/observable/retry.js","src/core/linq/observable/retrywhen.js","src/core/linq/observable/repeatwhen.js","src/core/perf/operators/scan.js","src/core/linq/observable/skiplast.js","src/core/linq/observable/startwith.js","src/core/linq/observable/takelast.js","src/core/perf/operators/concatmap.js","src/core/perf/operators/map.js","src/core/linq/observable/pluck.js","src/core/perf/operators/flatmap.js","src/core/perf/operators/flatmaplatest.js","src/core/perf/operators/skip.js","src/core/linq/observable/skipwhile.js","src/core/perf/operators/take.js","src/core/linq/observable/takewhile.js","src/core/perf/operators/filter.js","src/core/perf/operators/fromcallback.js","src/core/perf/operators/fromnodecallback.js","src/core/linq/observable/fromevent.js","src/core/linq/observable/fromeventpattern.js","src/core/perf/operators/frompromise.js","src/core/linq/observable/topromise.js","src/core/linq/observable/startasync.js","src/core/linq/observable/multicast.js","src/core/linq/observable/publish.js","src/core/linq/observable/share.js","src/core/linq/observable/publishlast.js","src/core/linq/observable/publishvalue.js","src/core/linq/observable/sharevalue.js","src/core/linq/observable/replay.js","src/core/linq/observable/sharereplay.js","src/core/linq/connectableobservable.js","src/core/linq/observable/_observabletimer.js","src/core/linq/observable/_observabletimerdateandperiod.js","src/core/linq/observable/_observabletimertimespanandperiod.js","src/core/linq/observable/interval.js","src/core/linq/observable/timer.js","src/core/linq/observable/delay.js","src/core/linq/observable/debounce.js","src/core/linq/observable/timestamp.js","src/core/linq/observable/sample.js","src/core/linq/observable/timeout.js","src/core/linq/observable/throttle.js","src/core/backpressure/pausable.js","src/core/backpressure/pausablebuffered.js","src/core/backpressure/controlled.js","src/core/linq/observable/pipe.js","src/core/linq/observable/transduce.js","src/core/anonymousobservable.js","src/core/autodetachobserver.js","src/core/subjects/innersubscription.js","src/core/subjects/subject.js","src/core/subjects/asyncsubject.js","src/core/subjects/anonymoussubject.js","src/core/subjects/behaviorsubject.js","src/core/subjects/replaysubject.js","src/core/backpressure/pauser.js","src/core/headers/exports.js","src/core/longstacktraces/longstackend.js","src/core/headers/outro.js"],dest:"dist/rx.lite.js"},"lite-compat":{src:["src/core/headers/license.js","src/core/headers/intro.js","src/core/headers/liteheader-compat.js","src/core/internal/trycatch.js","src/core/longstacktraces/longstackbegin.js","src/core/longstacktraces/longstacktraces.js","src/core/internal/polyfills.js","src/core/internal/errors.js","src/core/headers/enumeratorheader.js","src/core/internal/bindcallback.js","src/core/internal/dontenums.js","src/core/internal/isequal.js","src/core/internal/util.js","src/core/disposables/compositedisposable.js","src/core/disposables/disposable.js","src/core/disposables/booleandisposable.js","src/core/disposables/binarydisposable.js","src/core/disposables/refcountdisposable.js","src/core/concurrency/scheduleditem.js","src/core/concurrency/scheduler.js","src/core/concurrency/scheduler.recursive.js","src/core/concurrency/scheduler.periodic.js","src/core/concurrency/immediatescheduler.js","src/core/concurrency/currentthreadscheduler.js","src/core/concurrency/scheduleperiodicrecursive.js","src/core/concurrency/defaultscheduler.js","src/core/internal/priorityqueue.js","src/core/notification.js","src/core/observer-lite.js","src/core/abstractobserver.js","src/core/anonymousobserver.js","src/core/observable.js","src/core/perf/observablebase.js","src/core/perf/operators/flatmapbase.js","src/core/enumerable.js","src/core/scheduledobserver.js","src/core/perf/operators/toarray.js","src/core/linq/observable/create.js","src/core/linq/observable/defer.js","src/core/perf/operators/empty.js","src/core/perf/operators/from.js","src/core/perf/operators/fromarrayobservable.js","src/core/perf/operators/fromarray.js","src/core/perf/operators/never.js","src/core/perf/operators/of.js","src/core/perf/operators/pairs.js","src/core/perf/operators/range.js","src/core/perf/operators/repeat.js","src/core/perf/operators/just.js","src/core/perf/operators/throw.js","src/core/linq/observable/catchproto.js","src/core/linq/observable/catch.js","src/core/linq/observable/combinelatestproto.js","src/core/perf/operators/combinelatest.js","src/core/linq/observable/concatproto.js","src/core/perf/operators/concat.js","src/core/linq/observable/concatall.js","src/core/perf/operators/mergeconcat.js","src/core/linq/observable/merge.js","src/core/perf/operators/mergeall.js","src/core/linq/observable/mergedelayerror.js","src/core/perf/operators/skipuntil.js","src/core/perf/operators/switch.js","src/core/perf/operators/takeuntil.js","src/core/perf/operators/withlatestfrom.js","src/core/perf/operators/zip.js","src/core/linq/observable/zip.js","src/core/linq/observable/zipiterable.js","src/core/linq/observable/asobservable.js","src/core/linq/observable/dematerialize.js","src/core/perf/operators/distinctuntilchanged.js","src/core/perf/operators/tap.js","src/core/perf/operators/finally.js","src/core/perf/operators/ignoreelements.js","src/core/linq/observable/materialize.js","src/core/linq/observable/repeatproto.js","src/core/linq/observable/retry.js","src/core/linq/observable/retrywhen.js","src/core/linq/observable/repeatwhen.js","src/core/perf/operators/scan.js","src/core/linq/observable/skiplast.js","src/core/linq/observable/startwith.js","src/core/linq/observable/takelast.js","src/core/perf/operators/concatmap.js","src/core/perf/operators/map.js","src/core/linq/observable/pluck.js","src/core/perf/operators/flatmap.js","src/core/perf/operators/flatmaplatest.js","src/core/perf/operators/skip.js","src/core/linq/observable/skipwhile.js","src/core/perf/operators/take.js","src/core/linq/observable/takewhile.js","src/core/perf/operators/filter.js","src/core/perf/operators/fromcallback.js","src/core/perf/operators/fromnodecallback.js","src/core/linq/observable/fromevent.js","src/core/linq/observable/fromeventpattern.js","src/core/perf/operators/frompromise.js","src/core/linq/observable/topromise.js","src/core/linq/observable/startasync.js","src/core/linq/observable/multicast.js","src/core/linq/observable/publish.js","src/core/linq/observable/share.js","src/core/linq/observable/publishlast.js","src/core/linq/observable/publishvalue.js","src/core/linq/observable/sharevalue.js","src/core/linq/observable/replay.js","src/core/linq/observable/sharereplay.js","src/core/linq/connectableobservable.js","src/core/linq/observable/_observabletimer.js","src/core/linq/observable/_observabletimerdateandperiod.js","src/core/linq/observable/_observabletimertimespanandperiod.js","src/core/linq/observable/interval.js","src/core/linq/observable/timer.js","src/core/linq/observable/delay.js","src/core/linq/observable/debounce.js","src/core/linq/observable/timestamp.js","src/core/linq/observable/sample.js","src/core/linq/observable/timeout.js","src/core/linq/observable/throttle.js","src/core/backpressure/pausable.js","src/core/backpressure/pausablebuffered.js","src/core/backpressure/controlled.js","src/core/linq/observable/pipe.js","src/core/linq/observable/transduce.js","src/core/anonymousobservable.js","src/core/autodetachobserver.js","src/core/subjects/innersubscription.js","src/core/subjects/subject.js","src/core/subjects/asyncsubject.js","src/core/subjects/anonymoussubject.js","src/core/subjects/behaviorsubject.js","src/core/subjects/replaysubject.js","src/core/backpressure/pauser.js","src/core/headers/exports.js","src/core/longstacktraces/longstackend.js","src/core/headers/outro.js"],dest:"dist/rx.lite.compat.js"},"lite-extras":{src:["src/core/headers/license.js","src/core/headers/liteintro.js","src/core/headers/liteextrasheader.js","src/core/internal/trycatch.js","src/core/disposables/scheduleddisposable.js","src/core/checkedobserver.js","src/core/observeonobserver.js","src/core/observer-extras.js","src/core/linq/observable/observeon.js","src/core/linq/observable/subscribeon.js","src/core/linq/observable/generate.js","src/core/linq/observable/using.js","src/core/linq/observable/ambproto.js","src/core/linq/observable/amb.js","src/core/linq/observable/onerrorresumenextproto.js","src/core/linq/observable/onerrorresumenext.js","src/core/linq/observable/bufferwithcount.js","src/core/linq/observable/windowwithcount.js","src/core/linq/observable/takelastbuffer.js","src/core/linq/observable/defaultifempty.js","src/core/linq/observable/distinct.js","src/core/linq/observable/singleinstance.js","src/core/headers/suboutro.js"],dest:"dist/rx.lite.extras.js"},"lite-extras-compat":{src:["src/core/headers/license.js","src/core/headers/liteintro-compat.js","src/core/headers/liteextrasheader.js","src/core/internal/trycatch.js","src/core/disposables/scheduleddisposable.js","src/core/checkedobserver.js","src/core/observeonobserver.js","src/core/observer-extras.js","src/core/linq/observable/observeon.js","src/core/linq/observable/subscribeon.js","src/core/linq/observable/generate.js","src/core/linq/observable/using.js","src/core/linq/observable/ambproto.js","src/core/linq/observable/amb.js","src/core/linq/observable/onerrorresumenextproto.js","src/core/linq/observable/onerrorresumenext.js","src/core/linq/observable/bufferwithcount.js","src/core/linq/observable/windowwithcount.js","src/core/linq/observable/takelastbuffer.js","src/core/linq/observable/defaultifempty.js","src/core/linq/observable/distinct.js","src/core/linq/observable/singleinstance.js","src/core/headers/suboutro.js"],dest:"dist/rx.lite.extras.compat.js"},backpressure:{src:["src/core/headers/license.js","src/core/headers/subintro.js","src/core/headers/backpressureheader.js","src/core/internal/trycatch.js","src/core/backpressure/pauser.js","src/core/backpressure/pausable.js","src/core/backpressure/pausablebuffered.js","src/core/backpressure/controlled.js","src/core/backpressure/stopandwait.js","src/core/backpressure/windowed.js","src/core/linq/observable/pipe.js","src/core/headers/suboutro.js"],dest:"dist/rx.backpressure.js"},"backpressure-lite":{src:["src/core/headers/license.js","src/core/headers/liteintro.js","src/core/headers/backpressureheader.js","src/core/internal/trycatch.js","src/core/backpressure/stopandwait.js","src/core/backpressure/windowed.js","src/core/linq/observable/pipe.js","src/core/headers/suboutro.js"],dest:"modules/rx-lite-backpressure/rx.lite.backpressure.js"},"backpressure-lite-compat":{src:["src/core/headers/license.js","src/core/headers/liteintro-compat.js","src/core/headers/backpressureheader.js","src/core/internal/trycatch.js","src/core/backpressure/stopandwait.js","src/core/backpressure/windowed.js","src/core/linq/observable/pipe.js","src/core/headers/suboutro.js"],dest:"modules/rx-lite-backpressure-compat/rx.lite.backpressure.compat.js"},aggregates:{src:["src/core/headers/license.js","src/core/headers/subintro.js","src/core/headers/aggregatesheader.js","src/core/internal/trycatch.js","src/core/linq/observable/_extremaby.js","src/core/linq/observable/_firstonly.js","src/core/perf/operators/reduce.js","src/core/linq/observable/some.js","src/core/linq/observable/isempty.js","src/core/linq/observable/every.js","src/core/linq/observable/includes.js","src/core/linq/observable/count.js","src/core/linq/observable/indexof.js","src/core/linq/observable/sum.js","src/core/linq/observable/minby.js","src/core/linq/observable/min.js","src/core/linq/observable/maxby.js","src/core/linq/observable/max.js","src/core/linq/observable/average.js","src/core/linq/observable/sequenceequal.js","src/core/linq/observable/elementat.js","src/core/linq/observable/single.js","src/core/linq/observable/first.js","src/core/linq/observable/last.js","src/core/linq/observable/_findvalue.js","src/core/linq/observable/find.js","src/core/linq/observable/findindex.js","src/core/linq/observable/toset.js","src/core/linq/observable/tomap.js","src/core/linq/observable/slice.js","src/core/linq/observable/lastindexof.js","src/core/headers/suboutro.js"],dest:"dist/rx.aggregates.js"},"aggregates-lite":{src:["src/core/headers/license.js","src/core/headers/liteintro.js","src/core/headers/aggregatesheader.js","src/core/internal/trycatch.js","src/core/linq/observable/_extremaby.js","src/core/linq/observable/_firstonly.js","src/core/perf/operators/reduce.js","src/core/linq/observable/some.js","src/core/linq/observable/isempty.js","src/core/linq/observable/every.js","src/core/linq/observable/includes.js","src/core/linq/observable/count.js","src/core/linq/observable/indexof.js","src/core/linq/observable/sum.js","src/core/linq/observable/minby.js","src/core/linq/observable/min.js","src/core/linq/observable/maxby.js","src/core/linq/observable/max.js","src/core/linq/observable/average.js","src/core/linq/observable/sequenceequal.js","src/core/linq/observable/elementat.js","src/core/linq/observable/single.js","src/core/linq/observable/first.js","src/core/linq/observable/last.js","src/core/linq/observable/_findvalue.js","src/core/linq/observable/find.js","src/core/linq/observable/findindex.js","src/core/linq/observable/toset.js","src/core/linq/observable/tomap.js","src/core/linq/observable/slice.js","src/core/linq/observable/lastindexof.js","src/core/headers/suboutro.js"],dest:"modules/rx-lite-aggregates/rx.lite.aggregates.js"},"aggregates-lite-compat":{src:["src/core/headers/license.js","src/core/headers/liteintro-compat.js","src/core/headers/aggregatesheader.js","src/core/internal/trycatch.js","src/core/linq/observable/_extremaby.js","src/core/linq/observable/_firstonly.js","src/core/perf/operators/reduce.js","src/core/linq/observable/some.js","src/core/linq/observable/isempty.js","src/core/linq/observable/every.js","src/core/linq/observable/includes.js","src/core/linq/observable/count.js","src/core/linq/observable/indexof.js","src/core/linq/observable/sum.js","src/core/linq/observable/minby.js","src/core/linq/observable/min.js","src/core/linq/observable/maxby.js","src/core/linq/observable/max.js","src/core/linq/observable/average.js","src/core/linq/observable/sequenceequal.js","src/core/linq/observable/elementat.js","src/core/linq/observable/single.js","src/core/linq/observable/first.js","src/core/linq/observable/last.js","src/core/linq/observable/_findvalue.js","src/core/linq/observable/find.js","src/core/linq/observable/findindex.js","src/core/linq/observable/toset.js","src/core/linq/observable/tomap.js","src/core/linq/observable/slice.js","src/core/linq/observable/lastindexof.js","src/core/headers/suboutro.js"],dest:"modules/rx-lite-aggregates-compat/rx.lite.aggregates.compat.js"},async:{src:["src/core/headers/license.js","src/core/headers/asyncintro.js","src/core/headers/asyncheader.js","src/core/internal/trycatch.js","src/core/linq/observable/spawn.js","src/core/linq/observable/start.js","src/core/linq/observable/toasync.js","src/core/perf/operators/fromcallback.js","src/core/perf/operators/fromnodecallback.js","src/core/linq/observable/fromevent.js","src/core/linq/observable/fromeventpattern.js","src/core/linq/observable/startasync.js","src/core/headers/suboutro.js"],dest:"dist/rx.async.js"},"async-compat":{src:["src/core/headers/license.js","src/core/headers/asyncintro.js","src/core/headers/asyncheader.js","src/core/internal/trycatch.js","src/core/linq/observable/spawn.js","src/core/linq/observable/start.js","src/core/linq/observable/toasync.js","src/core/perf/operators/fromcallback.js","src/core/perf/operators/fromnodecallback.js","src/core/linq/observable/fromevent.js","src/core/linq/observable/fromeventpattern.js","src/core/linq/observable/startasync.js","src/core/headers/suboutro.js"],dest:"dist/rx.async.compat.js"},"async-lite":{src:["src/core/headers/license.js","src/core/headers/liteintro.js","src/core/headers/asyncheader.js","src/core/linq/observable/spawn.js","src/core/linq/observable/start.js","src/core/linq/observable/startasync.js","src/core/headers/suboutro.js"],dest:"modules/rx-lite-async/rx.lite.async.js"},"async-lite-compat":{src:["src/core/headers/license.js","src/core/headers/liteintro-compat.js","src/core/headers/asyncheader.js","src/core/linq/observable/spawn.js","src/core/linq/observable/start.js","src/core/linq/observable/startasync.js","src/core/headers/suboutro.js"],dest:"modules/rx-lite-async-compat/rx.lite.async.compat.js"},binding:{src:["src/core/headers/license.js","src/core/headers/subintro.js","src/core/headers/bindingheader.js","src/core/linq/observable/multicast.js","src/core/linq/observable/publish.js","src/core/linq/observable/share.js","src/core/linq/observable/publishlast.js","src/core/linq/observable/publishvalue.js","src/core/linq/observable/sharevalue.js","src/core/linq/observable/replay.js","src/core/linq/observable/sharereplay.js","src/core/subjects/innersubscription.js","src/core/subjects/behaviorsubject.js","src/core/subjects/replaysubject.js","src/core/linq/connectableobservable.js","src/core/linq/observable/singleinstance.js","src/core/headers/suboutro.js"],dest:"dist/rx.binding.js"},coincidence:{src:["src/core/headers/license.js","src/core/headers/subintro.js","src/core/headers/coincidenceheader.js","src/core/internal/trycatch.js","src/core/internal/map.js","src/core/linq/observable/join.js","src/core/linq/observable/groupjoin.js","src/core/linq/observable/buffer.js","src/core/linq/observable/window.js","src/core/linq/observable/pairwise.js","src/core/linq/observable/partition.js","src/core/linq/observable/groupby.js","src/core/linq/observable/groupbyuntil.js","src/core/linq/groupedobservable.js","src/core/headers/suboutro.js"],dest:"dist/rx.coincidence.js"},"coincidence-lite":{src:["src/core/headers/license.js","src/core/headers/liteintro.js","src/core/headers/coincidenceheader.js","src/core/internal/trycatch.js","src/core/internal/map.js","src/core/linq/observable/join.js","src/core/linq/observable/groupjoin.js","src/core/linq/observable/buffer.js","src/core/linq/observable/window.js","src/core/linq/observable/pairwise.js","src/core/linq/observable/partition.js","src/core/linq/observable/groupby.js","src/core/linq/observable/groupbyuntil.js","src/core/linq/groupedobservable.js","src/core/headers/suboutro.js"],dest:"modules/rx-lite-coincidence/rx.lite.coincidence.js"},"coincidence-lite-compat":{src:["src/core/headers/license.js","src/core/headers/liteintro-compat.js","src/core/headers/coincidenceheader.js","src/core/internal/trycatch.js","src/core/internal/map.js","src/core/linq/observable/join.js","src/core/linq/observable/groupjoin.js","src/core/linq/observable/buffer.js","src/core/linq/observable/window.js","src/core/linq/observable/pairwise.js","src/core/linq/observable/partition.js","src/core/linq/observable/groupby.js","src/core/linq/observable/groupbyuntil.js","src/core/linq/groupedobservable.js","src/core/headers/suboutro.js"],dest:"modules/rx-lite-coincidence-compat/rx.lite.coincidence.compat.js"},experimental:{src:["src/core/headers/license.js","src/core/headers/subintro.js","src/core/headers/experimentalheader.js","src/core/internal/trycatch.js","src/core/headers/enumeratorheader.js","src/core/linq/enumerable/while.js","src/core/linq/observable/let.js","src/core/linq/observable/if.js","src/core/linq/observable/for.js","src/core/linq/observable/while.js","src/core/linq/observable/dowhile.js","src/core/linq/observable/case.js","src/core/linq/observable/expand.js","src/core/linq/observable/forkjoin.js","src/core/linq/observable/forkjoinproto.js","src/core/linq/observable/manyselect.js","src/core/linq/observable/switchfirst.js","src/core/perf/operators/flatmapfirst.js","src/core/perf/operators/flatmapwithmaxconcurrent.js","src/core/headers/suboutro.js"],dest:"dist/rx.experimental.js"},"experimental-lite":{src:["src/core/headers/license.js","src/core/headers/liteintro.js","src/core/headers/experimentalheader.js","src/core/internal/trycatch.js","src/core/headers/enumeratorheader.js","src/core/linq/enumerable/while.js","src/core/linq/observable/let.js","src/core/linq/observable/if.js","src/core/linq/observable/for.js","src/core/linq/observable/while.js","src/core/linq/observable/dowhile.js","src/core/linq/observable/case.js","src/core/linq/observable/expand.js","src/core/linq/observable/forkjoin.js","src/core/linq/observable/forkjoinproto.js","src/core/linq/observable/manyselect.js","src/core/linq/observable/switchfirst.js","src/core/perf/operators/flatmapfirst.js","src/core/perf/operators/flatmapwithmaxconcurrent.js","src/core/headers/suboutro.js"],dest:"modules/rx-lite-experimental/rx.lite.experimental.js"},"experimental-lite-compat":{src:["src/core/headers/license.js","src/core/headers/liteintro-compat.js","src/core/headers/experimentalheader.js","src/core/internal/trycatch.js","src/core/headers/enumeratorheader.js","src/core/linq/enumerable/while.js","src/core/linq/observable/let.js","src/core/linq/observable/if.js","src/core/linq/observable/for.js","src/core/linq/observable/while.js","src/core/linq/observable/dowhile.js","src/core/linq/observable/case.js","src/core/linq/observable/expand.js","src/core/linq/observable/forkjoin.js","src/core/linq/observable/forkjoinproto.js","src/core/linq/observable/manyselect.js","src/core/linq/observable/switchfirst.js","src/core/perf/operators/flatmapfirst.js","src/core/perf/operators/flatmapwithmaxconcurrent.js","src/core/headers/suboutro.js"],dest:"modules/rx-lite-experimental-compat/rx.lite.experimental.compat.js"},joinpatterns:{src:["src/core/headers/license.js","src/core/headers/subintro.js","src/core/headers/joinpatternsheader.js","src/core/internal/trycatch.js","src/core/internal/map.js","src/core/joins/pattern.js","src/core/joins/plan.js","src/core/joins/activeplan.js","src/core/joins/joinobserver.js","src/core/linq/observable/and.js","src/core/linq/observable/thendo.js","src/core/linq/observable/when.js","src/core/headers/suboutro.js"],dest:"dist/rx.joinpatterns.js"},"joinpatterns-lite":{src:["src/core/headers/license.js","src/core/headers/liteintro.js","src/core/headers/joinpatternsheader.js","src/core/internal/trycatch.js","src/core/internal/map.js","src/core/joins/pattern.js","src/core/joins/plan.js","src/core/joins/activeplan.js","src/core/joins/joinobserver.js","src/core/linq/observable/and.js","src/core/linq/observable/thendo.js","src/core/linq/observable/when.js","src/core/headers/suboutro.js"],dest:"modules/rx-lite-joinpatterns/rx.lite.joinpatterns.js"},"joinpatterns-lite-compat":{src:["src/core/headers/license.js","src/core/headers/liteintro-compat.js","src/core/headers/joinpatternsheader.js","src/core/internal/trycatch.js","src/core/internal/map.js","src/core/joins/pattern.js","src/core/joins/plan.js","src/core/joins/activeplan.js","src/core/joins/joinobserver.js","src/core/linq/observable/and.js","src/core/linq/observable/thendo.js","src/core/linq/observable/when.js","src/core/headers/suboutro.js"],dest:"modules/rx-lite-joinpatterns-compat/rx.lite.joinpatterns.compat.js"},testing:{src:["src/core/headers/license.js","src/core/headers/testintro.js","src/core/headers/testheader.js","src/core/testing/reactivetest.js","src/core/testing/recorded.js","src/core/testing/subscription.js","src/core/testing/mockdisposable.js","src/core/testing/mockobserver.js","src/core/testing/mockpromise.js","src/core/testing/hotobservable.js","src/core/testing/coldobservable.js","src/core/testing/testscheduler.js","src/core/headers/suboutro.js"],dest:"dist/rx.testing.js"},"testing-lite":{src:["src/core/headers/license.js","src/core/headers/litetestintro.js","src/core/headers/testheader.js","src/core/testing/reactivetest.js","src/core/testing/recorded.js","src/core/testing/subscription.js","src/core/testing/mockdisposable.js","src/core/testing/mockobserver.js","src/core/testing/mockpromise.js","src/core/testing/hotobservable.js","src/core/testing/coldobservable.js","src/core/testing/testscheduler.js","src/core/headers/suboutro.js"],dest:"modules/rx-lite-testing/rx.lite.testing.js"},"testing-lite-compat":{src:["src/core/headers/license.js","src/core/headers/litetestintro-compat.js","src/core/headers/testheader.js","src/core/testing/reactivetest.js","src/core/testing/recorded.js","src/core/testing/subscription.js","src/core/testing/mockdisposable.js","src/core/testing/mockobserver.js","src/core/testing/mockpromise.js","src/core/testing/hotobservable.js","src/core/testing/coldobservable.js","src/core/testing/testscheduler.js","src/core/headers/suboutro.js"],dest:"modules/rx-lite-testing-compat/rx.lite.testing.compat.js"},time:{src:["src/core/headers/license.js","src/core/headers/subintro.js","src/core/headers/timeheader.js","src/core/internal/trycatch.js","src/core/linq/observable/_observabletimer.js","src/core/linq/observable/_observabletimerdateandperiod.js","src/core/linq/observable/_observabletimertimespanandperiod.js","src/core/linq/observable/interval.js","src/core/linq/observable/timer.js","src/core/linq/observable/delay.js","src/core/linq/observable/debounce.js","src/core/linq/observable/windowwithtime.js","src/core/linq/observable/windowwithtimeorcount.js","src/core/linq/observable/bufferwithtime.js","src/core/linq/observable/bufferwithtimeorcount.js","src/core/linq/observable/timeinterval.js","src/core/linq/observable/timestamp.js","src/core/linq/observable/sample.js","src/core/linq/observable/timeout.js","src/core/linq/observable/generatewithabsolutetime.js","src/core/linq/observable/generatewithrelativetime.js","src/core/linq/observable/delaysubscription.js","src/core/linq/observable/skiplastwithtime.js","src/core/linq/observable/takelastwithtime.js","src/core/linq/observable/takelastbufferwithtime.js","src/core/linq/observable/takewithtime.js","src/core/linq/observable/skipwithtime.js","src/core/linq/observable/skipuntilwithtime.js","src/core/linq/observable/takeuntilwithtime.js","src/core/linq/observable/throttle.js","src/core/headers/suboutro.js"],dest:"dist/rx.time.js"},"time-lite":{src:["src/core/headers/license.js","src/core/headers/liteintro.js","src/core/headers/timeheader.js","src/core/internal/trycatch.js","src/core/linq/observable/windowwithtime.js","src/core/linq/observable/windowwithtimeorcount.js","src/core/linq/observable/bufferwithtime.js","src/core/linq/observable/bufferwithtimeorcount.js","src/core/linq/observable/timeinterval.js","src/core/linq/observable/generatewithabsolutetime.js","src/core/linq/observable/generatewithrelativetime.js","src/core/linq/observable/delaysubscription.js","src/core/linq/observable/skiplastwithtime.js","src/core/linq/observable/takelastwithtime.js","src/core/linq/observable/takelastbufferwithtime.js","src/core/linq/observable/takewithtime.js","src/core/linq/observable/skipwithtime.js","src/core/linq/observable/skipuntilwithtime.js","src/core/linq/observable/takeuntilwithtime.js","src/core/headers/suboutro.js"],dest:"modules/rx-lite-time/rx.lite.time.js"},"time-lite-compat":{src:["src/core/headers/license.js","src/core/headers/liteintro-compat.js","src/core/headers/timeheader.js","src/core/internal/trycatch.js","src/core/linq/observable/windowwithtime.js","src/core/linq/observable/windowwithtimeorcount.js","src/core/linq/observable/bufferwithtime.js","src/core/linq/observable/bufferwithtimeorcount.js","src/core/linq/observable/timeinterval.js","src/core/linq/observable/generatewithabsolutetime.js","src/core/linq/observable/generatewithrelativetime.js","src/core/linq/observable/delaysubscription.js","src/core/linq/observable/skiplastwithtime.js","src/core/linq/observable/takelastwithtime.js","src/core/linq/observable/takelastbufferwithtime.js","src/core/linq/observable/takewithtime.js","src/core/linq/observable/skipwithtime.js","src/core/linq/observable/skipuntilwithtime.js","src/core/linq/observable/takeuntilwithtime.js","src/core/headers/suboutro.js"],dest:"modules/rx-lite-time-compat/rx.lite.time.compat.js"},virtualtime:{src:["src/core/headers/license.js","src/core/headers/subintro.js","src/core/headers/virtualtimeheader.js","src/core/concurrency/virtualtimescheduler.js","src/core/concurrency/historicalscheduler.js","src/core/headers/suboutro.js"],dest:"dist/rx.virtualtime.js"},"virtualtime-lite":{src:["src/core/headers/license.js","src/core/headers/liteintro.js","src/core/headers/virtualtimeheader.js","src/core/concurrency/virtualtimescheduler.js","src/core/concurrency/historicalscheduler.js","src/core/headers/suboutro.js"],dest:"modules/rx-lite-virtualtime/rx.lite.virtualtime.js"},"virtualtime-lite-compat":{src:["src/core/headers/license.js","src/core/headers/liteintro-compat.js","src/core/headers/virtualtimeheader.js","src/core/concurrency/virtualtimescheduler.js","src/core/concurrency/historicalscheduler.js","src/core/headers/suboutro.js"],dest:"modules/rx-lite-virtualtime-compat/rx.lite.virtualtime.compat.js"},sorting:{src:["src/core/headers/license.js","src/core/headers/subintro.js","src/core/headers/sortingheader.js","src/core/linq/observable/jortsort.js","src/core/linq/observable/jortsortuntil.js","src/core/headers/suboutro.js"],dest:"dist/rx.sorting.js"}},uglify:{options:{banner:"/* Copyright (c) Microsoft Open Technologies, Inc. All rights reserved. See License.txt in the project root for license information.*/"
},core:{options:{sourceMap:!0,sourceMapName:"dist/rx.core.map"},files:{"dist/rx.core.min.js":["dist/rx.core.js"]}},"core-binding":{options:{sourceMap:!0,sourceMapName:"dist/rx.core.binding.map"},files:{"dist/rx.core.binding.min.js":["dist/rx.core.binding.js"]}},"core-testing":{options:{sourceMap:!0,sourceMapName:"dist/rx.core.testing.map"},files:{"dist/rx.core.testing.min.js":["dist/rx.core.testing.js"]}},all:{options:{sourceMap:!0,sourceMapName:"dist/rx.all.map"},files:{"dist/rx.all.min.js":["dist/rx.all.js"]}},"all-compat":{options:{sourceMap:!0,sourceMapName:"dist/rx.all.compat.map"},files:{"dist/rx.all.compat.min.js":["dist/rx.all.compat.js"]}},main:{options:{sourceMap:!0,sourceMapName:"dist/rx.map"},files:{"dist/rx.min.js":["dist/rx.js"]}},"main-compat":{options:{sourceMap:!0,sourceMapName:"dist/rx.compat.map"},files:{"dist/rx.compat.min.js":["dist/rx.compat.js"]}},lite:{options:{sourceMap:!0,sourceMapName:"dist/rx.lite.map"},files:{"dist/rx.lite.min.js":["dist/rx.lite.js"]}},"lite-compat":{options:{sourceMap:!0,sourceMapName:"dist/rx.lite.compat.map"},files:{"dist/rx.lite.compat.min.js":["dist/rx.lite.compat.js"]}},"lite-extras":{options:{sourceMap:!0,sourceMapName:"dist/rx.lite.extras.map"},files:{"dist/rx.lite.extras.min.js":["dist/rx.lite.extras.js"]}},"lite-extras-compat":{options:{sourceMap:!0,sourceMapName:"dist/rx.lite.extras.compat.map"},files:{"dist/rx.lite.extras.compat.min.js":["dist/rx.lite.extras.compat.js"]}},aggregates:{options:{sourceMap:!0,sourceMapName:"dist/rx.aggregates.map"},files:{"dist/rx.aggregates.min.js":["dist/rx.aggregates.js"]}},"aggregates-lite":{options:{sourceMap:!0,sourceMapName:"modules/rx-lite-aggregates/rx.lite.aggregates.map"},files:{"modules/rx-lite-aggregates/rx.lite.aggregates.min.js":["modules/rx-lite-aggregates/rx.lite.aggregates.js"]}},"aggregates-lite-compat":{options:{sourceMap:!0,sourceMapName:"modules/rx-lite-aggregates-compat/rx.lite.aggregates.compat.map"},files:{"modules/rx-lite-aggregates-compat/rx.lite.aggregates.compat.min.js":["modules/rx-lite-aggregates-compat/rx.lite.aggregates.compat.js"]}},async:{options:{sourceMap:!0,sourceMapName:"dist/rx.async.map"},files:{"dist/rx.async.min.js":["dist/rx.async.js"]}},"async-compat":{options:{sourceMap:!0,sourceMapName:"dist/rx.async.compat.map"},files:{"dist/rx.async.compat.min.js":["dist/rx.async.compat.js"]}},"async-lite":{options:{sourceMap:!0,sourceMapName:"modules/rx-lite-async/rx.lite.async.map"},files:{"modules/rx-lite-async/rx.lite.async.min.js":["modules/rx-lite-async/rx.lite.async.js"]}},"async-lite-compat":{options:{sourceMap:!0,sourceMapName:"modules/rx-lite-async-compat/rx.lite.async.compat.map"},files:{"modules/rx-lite-async-compat/rx.lite.async.compat.min.js":["modules/rx-lite-async-compat/rx.lite.async.compat.js"]}},backpressure:{options:{sourceMap:!0,sourceMapName:"dist/rx.backpressure.map"},files:{"dist/rx.backpressure.min.js":["dist/rx.backpressure.js"]}},"backpressure-lite":{options:{sourceMap:!0,sourceMapName:"modules/rx-lite-backpressure/rx.lite.backpressure.map"},files:{"modules/rx-lite-backpressure/rx.lite.backpressure.min.js":["modules/rx-lite-backpressure/rx.lite.backpressure.js"]}},"backpressure-lite-compat":{options:{sourceMap:!0,sourceMapName:"modules/rx-lite-backpressure-compat/rx.lite.backpressure.compat.map"},files:{"modules/rx-lite-backpressure-compat/rx.lite.backpressure.compat.min.js":["modules/rx-lite-backpressure-compat/rx.lite.backpressure.compat.js"]}},binding:{options:{sourceMap:!0,sourceMapName:"dist/rx.binding.map"},files:{"dist/rx.binding.min.js":["dist/rx.binding.js"]}},coincidence:{options:{sourceMap:!0,sourceMapName:"dist/rx.coincidence.map"},files:{"dist/rx.coincidence.min.js":["dist/rx.coincidence.js"]}},"coincidence-lite":{options:{sourceMap:!0,sourceMapName:"modules/rx-lite-coincidence/rx.lite.coincidence.map"},files:{"modules/rx-lite-coincidence/rx.lite.coincidence.min.js":["modules/rx-lite-coincidence/rx.lite.coincidence.js"]}},"coincidence-lite-compat":{options:{sourceMap:!0,sourceMapName:"modules/rx-lite-coincidence-compat/rx.lite.coincidence.compat.map"},files:{"modules/rx-lite-coincidence-compat/rx.lite.coincidence.compat.min.js":["modules/rx-lite-coincidence-compat/rx.lite.coincidence.compat.js"]}},experimental:{options:{sourceMap:!0,sourceMapName:"dist/rx.experimental.map"},files:{"dist/rx.experimental.min.js":["dist/rx.experimental.js"]}},"experimental-lite":{options:{sourceMap:!0,sourceMapName:"modules/rx-lite-experimental/rx.lite.experimental.map"},files:{"modules/rx-lite-experimental/rx.lite.experimental.min.js":["modules/rx-lite-experimental/rx.lite.experimental.js"]}},"experimental-lite-compat":{options:{sourceMap:!0,sourceMapName:"modules/rx-lite-experimental-compat/rx.lite.experimental.compat.map"},files:{"modules/rx-lite-experimental-compat/rx.lite.experimental.compat.min.js":["modules/rx-lite-experimental-compat/rx.lite.experimental.compat.js"]}},joinpatterns:{options:{sourceMap:!0,sourceMapName:"dist/rx.joinpatterns.map"},files:{"dist/rx.joinpatterns.min.js":["dist/rx.joinpatterns.js"]}},"joinpatterns-lite":{options:{sourceMap:!0,sourceMapName:"modules/rx-lite-joinpatterns/rx.lite.joinpatterns.map"},files:{"modules/rx-lite-joinpatterns/rx.lite.joinpatterns.min.js":["modules/rx-lite-joinpatterns/rx.lite.joinpatterns.js"]}},"joinpatterns-lite-compat":{options:{sourceMap:!0,sourceMapName:"modules/rx-lite-joinpatterns-compat/rx.lite.joinpatterns.compat.map"},files:{"modules/rx-lite-joinpatterns-compat/rx.lite.joinpatterns.compat.min.js":["modules/rx-lite-joinpatterns-compat/rx.lite.joinpatterns.compat.js"]}},testing:{options:{sourceMap:!0,sourceMapName:"dist/rx.testing.map"},files:{"dist/rx.testing.min.js":["dist/rx.testing.js"]}},"testing-lite":{options:{sourceMap:!0,sourceMapName:"modules/rx-lite-testing/rx.lite.testing.map"},files:{"modules/rx-lite-testing/rx.lite.testing.min.js":["modules/rx-lite-testing/rx.lite.testing.js"]}},"testing-lite-compat":{options:{sourceMap:!0,sourceMapName:"modules/rx-lite-testing-compat/rx.lite.testing.compat.map"},files:{"modules/rx-lite-testing-compat/rx.lite.testing.compat.min.js":["modules/rx-lite-testing-compat/rx.lite.testing.compat.js"]}},time:{options:{sourceMap:!0,sourceMapName:"dist/rx.time.map"},files:{"dist/rx.time.min.js":["dist/rx.time.js"]}},"time-lite":{options:{sourceMap:!0,sourceMapName:"modules/rx-lite-time/rx.lite.time.map"},files:{"modules/rx-lite-time/rx.lite.time.min.js":["modules/rx-lite-time/rx.lite.time.js"]}},"time-lite-compat":{options:{sourceMap:!0,sourceMapName:"modules/rx-lite-time-compat/rx.lite.time.compat.map"},files:{"modules/rx-lite-time-compat/rx.lite.time.compat.min.js":["modules/rx-lite-time-compat/rx.lite.time.compat.js"]}},virtualtime:{options:{sourceMap:!0,sourceMapName:"dist/rx.virtualtime.map"},files:{"dist/rx.virtualtime.min.js":["dist/rx.virtualtime.js"]}},"virtualtime-lite":{options:{sourceMap:!0,sourceMapName:"modules/rx-lite-virtualtime/rx.lite.virtualtime.map"},files:{"modules/rx-lite-virtualtime/rx.lite.virtualtime.min.js":["modules/rx-lite-virtualtime/rx.lite.virtualtime.js"]}},"virtualtime-lite-compat":{options:{sourceMap:!0,sourceMapName:"modules/rx-lite-virtualtime-compat/rx.lite.virtualtime.compat.map"},files:{"modules/rx-lite-virtualtime-compat/rx.lite.virtualtime.compat.min.js":["modules/rx-lite-virtualtime-compat/rx.lite.virtualtime.compat.js"]}},sorting:{options:{sourceMap:!0,sourceMapName:"dist/rx.sorting.map"},files:{"dist/rx.sorting.min.js":["dist/rx.sorting.js"]}}},qunit:{all:["tests/*.html"]},jshint:{all:["rx.all.js"]},jscs:{src:"src/**/*.js",options:{config:".jscsrc"}},watch:{scripts:{files:"src/**/*.js",tasks:["default"],options:{interrupt:!0}}},copy:{lite:{flatten:!0,filter:"isFile",expand:!0,src:["dist/rx.lite.js","dist/rx.lite.map","dist/rx.lite.min.js"],dest:"modules/rx-lite/"},"lite-compat":{flatten:!0,filter:"isFile",expand:!0,src:["dist/rx.lite.compat.js","dist/rx.lite.compat.map","dist/rx.lite.compat.min.js"],dest:"modules/rx-lite-compat/"},"lite-extras":{flatten:!0,filter:"isFile",expand:!0,src:["dist/rx.lite.extras.js","dist/rx.lite.extras.map","dist/rx.lite.extras.min.js"],dest:"modules/rx-lite-extras/"},"lite-extras-compat":{flatten:!0,filter:"isFile",expand:!0,src:["dist/rx.lite.extras.compat.js","dist/rx.lite.extras.compat.map","dist/rx.lite.extras.compat.min.js"],dest:"modules/rx-lite-extras-compat/"},core:{flatten:!0,filter:"isFile",expand:!0,src:["dist/rx.core.js","dist/rx.core.map","dist/rx.core.min.js"],dest:"modules/rx-core/"},"core-binding":{flatten:!0,filter:"isFile",expand:!0,src:["dist/rx.core.binding.js","dist/rx.core.binding.map","dist/rx.core.binding.min.js"],dest:"modules/rx-core-binding/"},"core-testing":{flatten:!0,filter:"isFile",expand:!0,src:["dist/rx.core.testing.js","dist/rx.core.testing.map","dist/rx.core.testing.min.js"],dest:"modules/rx-core-testing/"}}}),require("load-grunt-tasks")(e),e.registerTask("nuget-complete","Register NuGet-Complete",function(){r.call(this,"nuget/RxJS-Complete/RxJS-Complete.nuspec")}),e.registerTask("nuget-aggregates","Register NuGet-Aggregates",function(){r.call(this,"nuget/RxJS-Aggregates/RxJS-Aggregates.nuspec")}),e.registerTask("nuget-all","Register NuGet-All",function(){r.call(this,"nuget/RxJS-All/RxJS-All.nuspec")}),e.registerTask("nuget-async","Register NuGet-Async",function(){r.call(this,"nuget/RxJS-Async/RxJS-Async.nuspec")}),e.registerTask("nuget-backpressure","Register NuGet-BackPressure",function(){r.call(this,"nuget/RxJS-BackPressure/RxJS-BackPressure.nuspec")}),e.registerTask("nuget-binding","Register NuGet-Binding",function(){r.call(this,"nuget/RxJS-Binding/RxJS-Binding.nuspec")}),e.registerTask("nuget-coincidence","Register NuGet-Coincidence",function(){r.call(this,"nuget/RxJS-Coincidence/RxJS-Coincidence.nuspec")}),e.registerTask("nuget-experimental","Register NuGet-Experimental",function(){r.call(this,"nuget/RxJS-Experimental/RxJS-Experimental.nuspec")}),e.registerTask("nuget-joinpatterns","Register NuGet-JoinPatterns",function(){r.call(this,"nuget/RxJS-JoinPatterns/RxJS-JoinPatterns.nuspec")}),e.registerTask("nuget-lite","Register NuGet-Lite",function(){r.call(this,"nuget/RxJS-Lite/RxJS-Lite.nuspec")}),e.registerTask("nuget-main","Register NuGet-Main",function(){r.call(this,"nuget/RxJS-Main/RxJS-Main.nuspec")}),e.registerTask("nuget-testing","Register NuGet-Testing",function(){r.call(this,"nuget/RxJS-Testing/RxJS-Testing.nuspec")}),e.registerTask("nuget-time","Register NuGet-Time",function(){r.call(this,"nuget/RxJS-Time/RxJS-Time.nuspec")}),e.registerTask("nuget-virtualtime","Register NuGet-VirtualTime",function(){r.call(this,"nuget/RxJS-VirtualTime/RxJS-VirtualTime.nuspec")}),e.registerTask("nuget",["nuget-complete","nuget-aggregates","nuget-all","nuget-async","nuget-backpressure","nuget-binding","nuget-coincidence","nuget-experimental","nuget-joinpatterns","nuget-lite","nuget-main","nuget-testing","nuget-time","nuget-virtualtime"]),e.registerTask("rebuild-ts","Rebuild typescript declarations",function(){function r(s){if(!a[s]){var c,t=/\/\/\/ <reference path\=\"(.*?)\" \/>/g,l=e.file.read(s),n=l.match(/module Rx \{([\s\S]*)\}[\s\S]*\(function\s*\(\)\s*\{[\s\S]*\}\)/);n&&n[1]&&(c=a[s]=n[1]),n||(n=l.match(/module Rx \{([\s\S]*)\}/),n&&n[1]&&(c=a[s]=n[1]));for(var b,j=i[s]=[];b=t.exec(l);){var p=o.resolve(__dirname,o.dirname(s),b[1]).substr(__dirname.length+1).replace(/\\/g,"/");s.indexOf("/testscheduler.ts")>-1&&p.indexOf("virtualtimescheduler.ts")>-1||(j.push(p),r(p))}return c}}function s(e,r){if(!u[r]){if("all"!==e&&"main"!==e&&"lite"!==e&&"core"!==e&&(0===e.indexOf("lite")&&n.lite[r]||0!==e.indexOf("lite")&&n.main[r]||n.core[r]))return void(u[r]=!0);r.match(/\/toset\.ts$/)||r.match(/\/tomap\.ts$/)||d.push(a[r]),m.push(a[r]),u[r]=!0}}function c(e,r){if(!u[r]){for(var o=i[r],t=0;t<o.length;t++)s(e,o[t]),c(e,o[t]);s(e,r)}}var o=require("path"),t=require("fs"),a={},i={},l=e.config.get("concat"),n={};r("ts/core/es5.ts"),r("ts/core/es6.ts");var b=[];for(var j in l)j.indexOf("-compat")>-1||("lite"===j||"main"===j||"core"===j?b.unshift(j):b.push(j));for(var j=0;j<b.length;j++){var p=b[j];n[p]||(n[p]={});var u=n[p],d=[],m=[],v=l[p],q=v.src,f=v.dest,h=!1;if(0!==f.indexOf("dist/")){if(0===f.indexOf("modules/"))continue;throw new Error("not sure how to handle "+f)}h=f.match(/dist\/(.*?)\.js/)[1],f=f.replace(/dist\/(.*?)\.js/,"ts/$1.d.ts");for(var g=0;g<q.length;g++){var x=q[g],y=x.replace(/src\/(.*?).js/,"ts/$1.ts").replace("perf/operators","linq/observable");if(a[y]||t.existsSync(y))a[y]||r(y),-1!==y.indexOf("/es5")&&-1!==y.indexOf("/es6")||c(p,y);else for(var k=["/headers/","/longstacktraces/","/internal/","/autodetachobserver","/subjects/innersubscription","/perf/observablebase","linq/enumerable/while",".compat.","linq/observable/_","/linq/observable/fromarrayobservable","/joins/","/linq/observable/flatmapbase","/disposables/scheduleddisposable","/concurrency/catchscheduler","/core/observeonobserver","/testing/mockpromise","/testing/hotobservable","/testing/coldobservable"],w=!1,M=0;M<k.length;M++)if(-1!==y.indexOf(k[M])){w=!0;break}}var N=function(r,s,c){var o="declare module Rx {\n"+s.join("")+"\n}\n";"all"!==p&&"main"!==p&&"lite"!==p&&"core"!==p||(o+='\ndeclare module "rx" { export = Rx; }\n'),h&&"core"!==p&&"main"!==p&&(o+='declare module "'+h+'" { export = Rx; }'),o+="\n",e.file.write(r,o)};"all"!==p&&"main"!==p&&"lite"!==p&&"core"!==p||(d.unshift(a["ts/core/es5.ts"]),m.unshift(a["ts/core/es6.ts"])),N(f,d),N(f.replace(/.d.ts$/,".es6.d.ts"),m,!0)}e.file.write("ts/iterable.es6.d.ts",e.file.read("ts/core/es6-iterable.d.ts")),e.file.write("ts/es6-promise.es6.d.ts",e.file.read("ts/core/es6-promise.d.ts"))}),e.registerTask("concat-min",["concat:core","concat:core-binding","concat:core-testing","concat:all","concat:all-compat","concat:main","concat:main-compat","concat:aggregates","concat:aggregates-lite","concat:aggregates-lite-compat","concat:async","concat:async-compat","concat:async-lite","concat:async-lite-compat","concat:backpressure","concat:backpressure-lite","concat:backpressure-lite-compat","concat:binding","concat:coincidence","concat:coincidence-lite","concat:coincidence-lite-compat","concat:experimental","concat:experimental-lite","concat:experimental-lite-compat","concat:joinpatterns","concat:joinpatterns-lite","concat:joinpatterns-lite-compat","concat:lite","concat:lite-compat","concat:lite-extras","concat:lite-extras-compat","concat:time","concat:time-lite","concat:time-lite-compat","concat:testing","concat:testing-lite","concat:testing-lite-compat","concat:virtualtime","concat:virtualtime-lite","concat:virtualtime-lite-compat","concat:sorting","uglify:core","uglify:core-binding","uglify:core-testing","uglify:all","uglify:all-compat","uglify:main","uglify:main-compat","uglify:aggregates","uglify:aggregates-lite","uglify:aggregates-lite-compat","uglify:async","uglify:async-compat","uglify:async-lite","uglify:async-lite-compat","uglify:backpressure","uglify:backpressure-lite","uglify:backpressure-lite-compat","uglify:binding","uglify:coincidence","uglify:coincidence-lite","uglify:coincidence-lite-compat","uglify:experimental","uglify:experimental-lite","uglify:experimental-lite-compat","uglify:joinpatterns","uglify:joinpatterns-lite","uglify:joinpatterns-lite-compat","uglify:lite","uglify:lite-compat","uglify:lite-extras","uglify:lite-extras-compat","uglify:time","uglify:time-lite","uglify:time-lite-compat","uglify:testing","uglify:testing-lite","uglify:testing-lite-compat","uglify:virtualtime","uglify:virtualtime-lite","uglify:virtualtime-lite-compat","uglify:sorting","copy:lite","copy:lite-compat","copy:lite-extras","copy:lite-extras-compat","copy:core","copy:core-binding","copy:core-testing"]),e.registerTask("default",["concat:core","concat:core-binding","concat:core-testing","concat:all","concat:all-compat","concat:main","concat:main-compat","concat:aggregates","concat:aggregates-lite","concat:aggregates-lite-compat","concat:async","concat:async-compat","concat:async-lite","concat:async-lite-compat","concat:backpressure","concat:backpressure-lite","concat:backpressure-lite-compat","concat:binding","concat:coincidence","concat:coincidence-lite","concat:coincidence-lite-compat","concat:experimental","concat:experimental-lite","concat:experimental-lite-compat","concat:joinpatterns","concat:joinpatterns-lite","concat:joinpatterns-lite-compat","concat:lite","concat:lite-compat","concat:lite-extras","concat:lite-extras-compat","concat:time","concat:time-lite","concat:time-lite-compat","concat:testing","concat:testing-lite","concat:testing-lite-compat","concat:virtualtime","concat:virtualtime-lite","concat:virtualtime-lite-compat","concat:sorting","uglify:core","uglify:core-binding","uglify:core-testing","uglify:all","uglify:all-compat","uglify:main","uglify:main-compat","uglify:aggregates","uglify:aggregates-lite","uglify:aggregates-lite-compat","uglify:async","uglify:async-compat","uglify:async-lite","uglify:async-lite-compat","uglify:backpressure","uglify:backpressure-lite","uglify:backpressure-lite-compat","uglify:binding","uglify:coincidence","uglify:coincidence-lite","uglify:coincidence-lite-compat","uglify:experimental","uglify:experimental-lite","uglify:experimental-lite-compat","uglify:joinpatterns","uglify:joinpatterns-lite","uglify:joinpatterns-lite-compat","uglify:lite","uglify:lite-compat","uglify:lite-extras","uglify:lite-extras-compat","uglify:time","uglify:time-lite","uglify:time-lite-compat","uglify:testing","uglify:testing-lite","uglify:testing-lite-compat","uglify:virtualtime","uglify:virtualtime-lite","uglify:virtualtime-lite-compat","uglify:sorting","copy:lite","copy:lite-compat","copy:lite-extras","copy:lite-extras-compat","copy:core","copy:core-binding","copy:core-testing","qunit","rebuild-ts"])};